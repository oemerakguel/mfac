services:
  frontend:
    build:
      context: frontend/.
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    ports:
      - 8080:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      backend:
        condition: service_healthy
  backend:
    build:
      context: backend/.
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - FEATURE_HEALTH=true
      - DB_HOST=prod-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_NAME=items-db
    expose:
      - 3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 25s
    depends_on:
      database:
        condition: service_healthy
  database:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: items-db
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:
